// <auto-generated />
using System;
using AuthService.Infrastructure.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthService.Infrastructure.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20251005210555_Migration3UpdateSeedData")]
    partial class Migration3UpdateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthService.Domain.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleDescription = "Admin user",
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleDescription = "Support agent",
                            RoleName = "Agent"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleDescription = "End customer",
                            RoleName = "Customer"
                        });
                });

            modelBuilder.Entity("AuthService.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 20, 56, 22, 0, DateTimeKind.Utc),
                            Email = "admin@supporthub.com",
                            PasswordHash = "$2b$10$f2dXi5mshOoIvA68eCbaKOREF4BtWy7u4T.uZt1pXjaXZwHrbgKoS",
                            UserName = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2025, 10, 5, 20, 56, 22, 0, DateTimeKind.Utc),
                            Email = "agent@supporthub.com",
                            PasswordHash = "$2b$10$PKA31qEzgPtkeEDriinSN.X23wzgvc2UbsyOf6eCSIIwVK4XGZj2y",
                            UserName = "agent"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedAt = new DateTime(2025, 10, 5, 20, 56, 22, 0, DateTimeKind.Utc),
                            Email = "customer@supporthub.com",
                            PasswordHash = "$2b$10$MfKOL5BAldw0QORTaipoaeS0ZpHrUbfxqsGYMznVIL7IW0mLvBW3y",
                            UserName = "customer"
                        });
                });

            modelBuilder.Entity("AuthService.Domain.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("userRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("AuthService.Domain.Models.UserRole", b =>
                {
                    b.HasOne("AuthService.Domain.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthService.Domain.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AuthService.Domain.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AuthService.Domain.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
